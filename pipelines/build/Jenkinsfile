pipeline {
    agent {
      kubernetes {
      label 'maven'
      idleMinutes 10
      yamlFile 'pods/maven-pod.yaml'
      defaultContainer 'maven'
      }
    }
    stages {
    stage('Build All') {
        steps {
          git 'https://github.com/rkamradt/MondoReacto.git'
          container('maven') {
            sh """
              mvn -B clean install
            """
          }
       }
    }
    stage('Build Incoming Service Image') {
        steps {
          container('maven') {
            sh """
              cd incoming-service
              mvn -B verify jib:build -Dcontainer-repo=registry.container-registry:5000
              cd ../incoming-servic-test
              mvn -B verify jib:build -Dcontainer-repo=registry.container-registry:5000
            """
          }
       }
    }
    stage('Start Incoming Service') {
      steps {
          build job: 'deploy', parameters: [
              string(name: 'upsteam_project_name', value: env.NAME),
              string(name: 'DEPLOYMENTNAME', value: 'incoming-service')
          ], wait: false
      }
    }
    stage('Build Persister Image') {
        steps {
          container('maven') {
            sh """
              cd incoming-persist
              mvn -B verify jib:build -Dcontainer-repo=registry.container-registry:5000
              cd ../incoming-persist-test
              mvn -B verify jib:build -Dcontainer-repo=registry.container-registry:5000
            """
          }
       }
    }
    stage('Start Persister') {
      steps {
          build job: 'deploy', parameters: [
              string(name: 'upsteam_project_name', value: env.NAME),
              string(name: 'DEPLOYMENTNAME', value: 'incoming-persist')
          ], wait: false
      }
    }
    stage('Build Incoming Read Service Image') {
        steps {
          container('maven') {
            sh """
              cd incoming-read-service
              mvn -B verify jib:build -Dcontainer-repo=registry.container-registry:5000
              cd ../incoming-read-service-test
              mvn -B verify jib:build -Dcontainer-repo=registry.container-registry:5000
            """
          }
       }
    }
    stage('Start Read Service') {
      steps {
          build job: 'deploy', parameters: [
              string(name: 'upsteam_project_name', value: env.NAME),
              string(name: 'DEPLOYMENTNAME', value: 'incoming-read-service')
          ], wait: false
      }
    }
    }
    post {
        always {
            slackSend (color: '#FFFF00', message: "Jenkins Build ${currentBuild.currentResult}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
    }
}
