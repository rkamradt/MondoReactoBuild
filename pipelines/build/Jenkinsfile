pipeline {
    agent {
      kubernetes {
      label 'maven'
      idleMinutes 10
      yamlFile 'pods/maven-pod.yaml'
      defaultContainer 'maven'
      }
    }
    stages {
        stage('Build Stage') {
            steps {
              git 'https://github.com/rkamradt/MondoReacto.git'
              container('maven') {
                sh """
                  mvn -B clean install
                  cd incoming-persist
                  mvn -B verify jib:build -Dcontainer-repo=registry.container-registry:5000
                  cd ../incoming-persist-test
                  mvn -B verify jib:build -Dcontainer-repo=registry.container-registry:5000
                  cd ../incoming-read-service
                  mvn -B verify jib:build -Dcontainer-repo=registry.container-registry:5000
                  cd ../incoming-service
                  mvn -B verify jib:build -Dcontainer-repo=registry.container-registry:5000
                  cd ../incoming-service-test
                  mvn -B verify jib:build -Dcontainer-repo=registry.container-registry:5000
                  cd ../queue-puller
                  mvn -B verify jib:build -Dcontainer-repo=registry.container-registry:5000
                """
              }
           }
        }
        stage('trigger deployments') {
          steps {
              build job: 'deploy', parameters: [
                  string(name: 'upsteam_project_name', value: env.NAME),
                  string(name: 'DEPLOYMENTNAME', value: 'incoming-service')
              ], wait: false
          }
        }
    }
    post {
        always {
            slackSend (color: '#FFFF00', message: "Jenkins Build ${currentBuild.currentResult}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' (${env.BUILD_URL})")
        }
    }
}
